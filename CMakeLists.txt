cmake_minimum_required(VERSION 3.17.0)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

project(gbs LANGUAGES CXX)

# c++ conf
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

# Set installation directories (CMAKE_INSTALL_INCLUDEDIR, CMAKE_INSTALL_BINDIR, CMAKE_INSTALL_LIBDIR)
include(GNUInstallDirs)

message("-- CMake install prefix: " ${CMAKE_INSTALL_PREFIX})
message("  -> binaries: " ${CMAKE_INSTALL_BINDIR})
message("  -> libs: " ${CMAKE_INSTALL_LIBDIR})
message("  -> includes: " ${CMAKE_INSTALL_INCLUDEDIR})

function(INSTALL_HEADERS REQUIRED_ARG)
    # copy headers keeping file structure
    string(TOLOWER ${PROJECT_NAME} inc_sub_dir)
    install(
            DIRECTORY "${CMAKE_SOURCE_DIR}/${inc_sub_dir}"
            DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}"
            FILES_MATCHING PATTERN "*.h"
            PATTERN "cmake" EXCLUDE
            PATTERN "tests" EXCLUDE
            PATTERN "build*" EXCLUDE
            PATTERN "python" EXCLUDE
            PATTERN "xml" EXCLUDE
            PATTERN "doc" EXCLUDE
            PATTERN "recipe" EXCLUDE
            PATTERN ".*" EXCLUDE
    )
endfunction()

include_directories(${CMAKE_CURRENT_SOURCE_DIR})

# Boost
find_package(Boost REQUIRED)

# Eigen
find_package (Eigen3 3.3 REQUIRED NO_MODULE)
include_directories(${EIGEN3_INCLUDE_DIR})

# VTK
find_package(VTK COMPONENTS
            CommonCore
            CommonColor
            CommonDataModel
            FiltersSources
            FiltersGeneral
            InteractionStyle
            RenderingCore
            RenderingFreeType
            RenderingOpenGL2)

# occt
find_package(OpenCASCADE REQUIRED)
link_directories(${OpenCASCADE_LIBRARY_DIR})
include_directories(${OpenCASCADE_INCLUDE_DIR})
add_compile_definitions(_SILENCE_CXX17_ITERATOR_BASE_CLASS_DEPRECATION_WARNING) # occt interators seems to be old

INSTALL_HEADERS(${PROJECT_NAME})

# Tests
if(${GBS_BUILD_TESTS})
    # Google Tests #
    find_package(GTest REQUIRED)
    include_directories(${GTEST_INCLUDE_DIRS})
    link_directories(${GTEST_LIBRARIES})

    message(STATUS "gtest include dirs: " ${GTEST_INCLUDE_DIRS})
    message(STATUS "gtest lib dirs: " ${GTEST_LIBRARIES})
    
    add_subdirectory(tests)
endif(${GBS_BUILD_TESTS})

# OCCT utils
if(${GBS_BUILD_TESTS} OR ${USE_OCCT_UTILS})
    add_subdirectory(gbs-occt)
endif(${GBS_BUILD_TESTS} OR ${USE_OCCT_UTILS})

# Rendering module
if(${USE_RENDER} OR ${GBS_BUILD_TESTS})
    add_subdirectory(gbs-render)
endif(${USE_RENDER})

# Python bindings
if(${USE_PYTHON_BINDINGS})
    add_subdirectory(python)
endif(${USE_PYTHON_BINDINGS})